import{_ as t,r as a,c as d,o as l,a as i,b as o,d as n,e as s}from"./app-C-eiXR-Q.js";const c={},p={href:"https://help.aliyun.com/zh/ecs/user-guide/cron-expressions",target:"_blank",rel:"noopener noreferrer"};function u(h,e){const r=a("ExternalLinkIcon");return l(),d("div",null,[e[2]||(e[2]=i('<h1 id="分布式任务调度" tabindex="-1"><a class="header-anchor" href="#分布式任务调度" aria-hidden="true">#</a> 分布式任务调度</h1><p>在实际项目中，经常需要执行定时任务，比如每天执行的数据统计或清理，定时执行状态拟合，发送消息等。这些任务通常是周期性执行的，因此需要一个机制来执行这些任务。</p><h2 id="cron-表达式" tabindex="-1"><a class="header-anchor" href="#cron-表达式" aria-hidden="true">#</a> Cron 表达式</h2><p>Cron 表达式是一种用于描述定时任务的表达式，它由 5 ～7 个字段组成，每个字段表示一个时间单位。Linux 默认的 Cron 支持 5 个字段，从左到右依次是</p><blockquote><p>分钟 minute、小时 hour、日期 day of month、月份 month、星期 day of week</p></blockquote><p>除了上面 5 个字段，更全面的 Cron 表达式还有 second（秒）、year（年）两个字段。</p><blockquote><p>[秒] 分 时 日期 月份 星期 [年份]</p></blockquote><p>下面是一些常用的 Cron 表达式示例：</p><ul><li>每天 10:00 执行任务：<code>0 10 * * *</code></li><li>每周一 10:00 执行任务：<code>0 10 * * 1</code></li><li>每月 1 号 10:00 执行任务：<code>0 10 1 * *</code></li><li>每天 10:00 和 22:00 执行任务：<code>0 10,22 * * *</code></li><li>每周一、周三、周五 10:00 执行任务：<code>0 10 * * 1,3,5</code></li></ul>',9)),o("p",null,[e[1]||(e[1]=n("更详细的 Cron 语法可以参考阿里云的这篇文档 ",-1)),o("a",p,[e[0]||(e[0]=n("Cron表达式",-1)),s(r)])]),e[3]||(e[3]=o("h2",{id:"单体服务下的定时任务",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#单体服务下的定时任务","aria-hidden":"true"},"#"),n(" 单体服务下的定时任务")],-1)),e[4]||(e[4]=o("p",null,"在服务器环境或者单体服务下执行定时任务是相对比较简单的，比如直接在 Linux 系统配置定时任务，或者使用语言、框架中自带的定时任务调度器来设置即可。",-1))])}const m=t(c,[["render",u],["__file","cron.html.vue"]]);export{m as default};
