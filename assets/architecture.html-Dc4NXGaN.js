import{_ as l,r as o,c as u,o as i,b as s,a as p,d as a,e as t}from"./app-C-eiXR-Q.js";const c={},r={href:"https://queue.acm.org/detail.cfm?id=2898444",target:"_blank",rel:"noopener noreferrer"},k={href:"https://kubernetes.io/zh-cn/docs/concepts/overview/components/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://etcd.io/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-controller-manager/names/controller_names.go",target:"_blank",rel:"noopener noreferrer"},b={href:"https://kubernetes.io/docs/concepts/architecture/cri/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://coredns.io/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://docs.nginx.com/nginx-ingress-controller/",target:"_blank",rel:"noopener noreferrer"};function g(f,n){const e=o("ExternalLinkIcon");return i(),u("div",null,[n[25]||(n[25]=s("h1",{id:"整体架构",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#整体架构","aria-hidden":"true"},"#"),a(" 整体架构")],-1)),n[26]||(n[26]=s("h2",{id:"为什么需要-kubernetes",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#为什么需要-kubernetes","aria-hidden":"true"},"#"),a(" 为什么需要 Kubernetes")],-1)),n[27]||(n[27]=s("p",null,"Docker 的出现极大的简化了应用的打包、分发、部署、运维等操作，但是随着应用规模的不断扩大，尤其是微服务架构流行，会导致容器的数量越来越多，容器本身的运维，容器之间的服务发现、负载均衡、伸缩、升级、容灾、通信等操作都随之变得越来越复杂，此时需要一个容器编排系统来管理这些容器。",-1)),s("p",null,[n[1]||(n[1]=a("Google 2016 年发布的论文 ",-1)),s("a",r,[n[0]||(n[0]=a("Borg, Omega, and Kubernetes",-1)),t(e)]),n[2]||(n[2]=a(" 介绍了其容器编排系统的演变，从最早的 Borg 到更加符合软件工程规范的 Omega，最终演化为现在开源的 Kubernetes，已经成了容器编排的事实标准。",-1))]),n[28]||(n[28]=s("h2",{id:"kubernetes-集群架构",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#kubernetes-集群架构","aria-hidden":"true"},"#"),a(" Kubernetes 集群架构")],-1)),n[29]||(n[29]=s("p",null,"Kubernetes 本身是由一系列组件组成的容器编排系统，每个组件各司其职，从而实现容器的创建、调度、伸缩、配置等管理功能。整体架构如图：",-1)),s("p",null,[n[4]||(n[4]=s("img",{src:"https://kubernetes.io/images/docs/kubernetes-cluster-architecture.svg",alt:"Kubernetes 架构图"},null,-1)),n[5]||(n[5]=a(" 图片来自 ",-1)),s("a",k,[n[3]||(n[3]=a("Kubernetes 官方文档",-1)),t(e)])]),n[30]||(n[30]=p('<h3 id="kubernetes-节点" tabindex="-1"><a class="header-anchor" href="#kubernetes-节点" aria-hidden="true">#</a> Kubernetes 节点</h3><p>首先 Kubernetes 是由若干台服务器组成集群，每台服务器就是一个节点，节点有两类角色：</p><ul><li><p><strong>控制节点（ControlPlane Node）</strong>：也叫 master 节点，主要负责运行 Kubernetes 的控制逻辑组件，实现 Kubernetes 的最核心的管理功能。master 节点可以有多个，组成高可用的控制平面，并且默认不允许运行普通的应用。</p></li><li><p><strong>工作节点 (Worker Node)</strong>：用来部署运行容器化应用的节点。</p></li></ul><h3 id="kubernetes-控制组件" tabindex="-1"><a class="header-anchor" href="#kubernetes-控制组件" aria-hidden="true">#</a> Kubernetes 控制组件</h3><p>Kubernetes 最核心的是 4 个运行在 ControlPlane 节点的控制组件。分别是：</p>',5)),s("ul",null,[s("li",null,[s("p",null,[s("strong",null,[s("a",d,[n[6]||(n[6]=a("Etcd",-1)),t(e)])]),n[7]||(n[7]=a("：采用 RAFT 协议的强一致性、高可用的分布式的 key-value 存储系统，用于保存 Kubernetes 集群的所有数据，包括配置、状态等信息。",-1))])]),n[12]||(n[12]=s("li",null,[s("p",null,[s("strong",null,"kube-apiserver"),a("：这是外部和其他组件访问 Kubernetes 的 API 网关，采用 RESTful 协议，支持无状态水平伸缩。它是唯一可以与 etcd 通信的组件，其提供了一系列的 CRUD 接口供外部访问以操作数据，并且会校验请求中 object 数据的合法性以及进行身份认证、鉴权、准入控制等操作。")])],-1)),s("li",null,[n[11]||(n[11]=s("p",null,[s("strong",null,"kube-controller-manager"),a("：顾名思义，就是管理各类控制器的，kubernetes 使用各种控制器 Controller 来管理不同类型的资源对象。每当资源对象发生变动，都会有对应的 Controller 执行拟合操作，使得资源对象的实际状态和预期状态保持一致。")],-1)),s("p",null,[n[9]||(n[9]=a("kube-controller-manager 就是负责创建并启动这些 Controller 的进程，常见的 Controller 有 Deployment Controller、ReplicaSet Controller、StatefulSet Controller、DaemonSet Controller、Job Controller 等，完整 Controller 列表参考 ",-1)),s("a",v,[n[8]||(n[8]=a("controller_names",-1)),t(e)]),n[10]||(n[10]=a("。",-1))])]),n[13]||(n[13]=s("li",null,[s("p",null,[s("strong",null,"kube-scheduler"),a("：负责监听集群中还未分配到所属节点的 Pod，其根据一系列调度规则，将 Pod 调度到合适的节点运行。")])],-1))]),n[31]||(n[31]=p('<h3 id="通用组件" tabindex="-1"><a class="header-anchor" href="#通用组件" aria-hidden="true">#</a> 通用组件</h3><p>除了上述 4 个控制组件外，K8s 为了在节点运行容器以及执行通信等操作，每个节点还需要运行几个通用组件，分别是：</p><ul><li><p><strong>kubelet</strong>：这是一个运行在每个节点上的代理，向上与 kube-apiserver 交互同步 Pod 相关的信息。向下与容器运行时通信，根据实际的 Pod 信息来创建或销毁容器，并收集容器的状态、指标。</p></li><li><p><strong>kube-proxy</strong>：这是一个运行在每个节点上的网络代理，管理在节点上的网络规则，用来允许集群中的 Pod 进行集群内外的网络通讯。一般情况 kube-proxy 会直接使用操作系统提供的网络包过滤层的能力（比如iptable，ipvs）来进行网络流量的分发。</p></li></ul><h3 id="容器运行时-containerd" tabindex="-1"><a class="header-anchor" href="#容器运行时-containerd" aria-hidden="true">#</a> 容器运行时 containerd</h3><p>Kubernetes 是一个容器编排系统，其本身并不负责容器具体的创建、销毁等操作,所有容器操作都是通过每个节点的 kubelet 调用容器运行时来实现。</p>',5)),s("p",null,[n[15]||(n[15]=a("最开始 Kubernetes 使用 Docker 来操作具体的容器，后来引入了 ",-1)),s("a",b,[n[14]||(n[14]=a("CRI（Container Runtime Interface）",-1)),t(e)]),n[16]||(n[16]=a("接口。只要实现了 CRI 接口，就可以与 kubelet 交互从而被 Kubernetes 编排，这也符合 IOC 和面向接口编程的原则。",-1))]),n[32]||(n[32]=p('<p>容器运行时又可以分为低级容器运行时和高级容器运行时。</p><p><strong>低级容器运行时</strong></p><p>处于最底层与操作系统直接交互的部分，它们一般遵循 OCI（Open Container Initiative，开放容器倡议）规范，直接负责容器的创建、销毁等操作。常见的低级容器运行时有：</p><ul><li><code>runc</code>：使用最广泛的低级容器运行时，Docker、containerd、Podman 等默认运行时。</li><li><code>nvidia-container-runtime</code>：NVIDIA 在 runc 的基础上进行扩展，提供了对 GPU 的支持。如果我们使用 Kubernetes 管理 GPU，通常会使用该运行时。</li><li><code>crun</code>：使用 C 语言编写的低级容器运行时，具有更快的启动时间和更低的内存占用，并且对 cgroup v2 有更好的支持。</li><li><code>kata-containers</code>：Kata Containers 是一个轻量级的虚拟化容器运行时，旨在提供更强的安全性和隔离性。</li><li><code>gvisor</code>： Google 开源的容器运行时，在用户态空间进行相关操作。</li></ul><p>后两者又被称为沙盒型运行时，实现了容器级别的隔离，提供了更强的安全性。如果对安全性要求非常高的场景，可以使用此类低级运行时。</p><p><strong>高级容器运行时</strong></p><p>处于低级容器运行时之上，提供了更加丰富的功能和工具，比如镜像管理、存储、网络管理等。常见的有：</p><ul><li><code>containerd</code>：最流行的高级容器运行时，最初是 Docker 的一部分，后来独立出来成为一个独立的项目。它实现了 CRI 接口，并且默认使用 runc 作为其低级运行时。</li><li><code>CRI-O</code>：专门为 Kubernetes 设计的轻量级容器运行时，实现了 CRI 接口，并且默认使用 runc 作为其低级运行时。</li><li><code>Docker</code>：虽然 Docker 本身不是一个符合 CRI 的容器运行时，但是 Kubernetes 通过 <code>dockershim</code> 来支持 Docker。需要注意的是，从 Kubernetes 1.20 开始，<code>dockershim</code> 被弃用，建议使用 containerd 或 CRI-O 等符合 CRI 的容器运行时。</li><li><code>Podman</code>：Podman 是一个无守护进程的容器引擎，支持运行和管理 OCI 容器。虽然 Podman 本身不直接实现 CRI 接口，但可以通过 <code>cri-o</code> 或其他适配器与 Kubernetes 集成。</li></ul><h3 id="其他组件" tabindex="-1"><a class="header-anchor" href="#其他组件" aria-hidden="true">#</a> 其他组件</h3>',9)),s("ul",null,[s("li",null,[s("p",null,[n[18]||(n[18]=s("strong",null,"DNS服务",-1)),n[19]||(n[19]=a("： 集群内部的 DNS 服务组件，用来对 Service、Pod 做 DNS 解析实现集群内部的服务发现，目前默认是",-1)),s("a",m,[n[17]||(n[17]=a("CoreDNS",-1)),t(e)]),n[20]||(n[20]=a("。",-1))])]),s("li",null,[n[24]||(n[24]=s("p",null,[s("strong",null,"Ingress网关"),a("：在我们的传统 IT 环境中，经常会用 Nginx 做请求代理和路由、负载均衡，将我们的服务暴露给外界访问。在 Kubernetes 中也一样，我们需要一个类似的代理将部署在 Kubernetes 中的服务对外暴露，这是由 Ingress Controller 来做。")],-1)),s("p",null,[n[22]||(n[22]=a("该组件基于 Ingress 对象对外部请求做路由，将服务暴露给外界访问，最常用的一般是 ",-1)),s("a",y,[n[21]||(n[21]=a("NGINX Ingress Controller",-1)),t(e)]),n[23]||(n[23]=a("。",-1))])])]),n[33]||(n[33]=p(`<h2 id="kubernetes-资源对象" tabindex="-1"><a class="header-anchor" href="#kubernetes-资源对象" aria-hidden="true">#</a> Kubernetes 资源对象</h2><p>上面介绍了 Kubernetes 运行所需的组件，如果我们想要在 Kubernetes 中部署一个应用，就需要用到Kubernetes 的资源对象。</p><p><strong>Kubernetes 将一切视为资源。</strong> 在Kubernetes 中，资源对象是持久化的实体，表现形式就是 YAML 文件。我们使用 Kubernetes 部署服务时基本就是编写各种资源对象的 yaml 文件，然后通过 kubectl 命令来操作这些资源对象。</p><p>下面是一个 yaml 文件示例，：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1 
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>deployment
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
      <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx
  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> 
  <span class="token key atrule">template</span><span class="token punctuation">:</span>
    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">labels</span><span class="token punctuation">:</span>
        <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">spec</span><span class="token punctuation">:</span>
      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx
        <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>1.14.2
        <span class="token key atrule">ports</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个完整的资源对象的 yaml 文件由四部分组成：</p><ul><li><p><strong>apiVersion &amp; kind</strong>：创建该对象所使用的 Kubernetes API 的版本和对象的类别。</p></li><li><p><strong>metadata</strong>：元信息，帮助唯一性标识对象的一些数据，包括 name 字符串、UID 和可选的 namespace 等。</p></li><li><p><strong>spec</strong>：对象规格，不同的对象有不同的 spec，用于定义其相关属性，创建对象时设置其内容，描述我们希望资源对象的<code>期望状态</code>，比如运行的副本数、镜像版本、端口信息等。</p></li><li><p><strong>status</strong>: 对象的<code>当前状态</code>，由 Kubernetes 系统组件设置并更新，在创建对象时我们只需要定义上述三部分内容即可。Kubernetes 的控制组件 管理组件的状态，以使之与我们定义的期望状态相匹配。</p></li></ul><p>使用 <code>kubectl get [objectType] [objectName] -o yaml</code> 可以在命令行上查看资源对象完整的 yaml。比如：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>$ kubectl get pod nginx <span class="token punctuation">-</span>o yaml
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>
    <span class="token key atrule">cni.projectcalico.org/containerID</span><span class="token punctuation">:</span> f92fedeb090846bb8c81e43b28141e6b547c66f9b21892d406d0761ccd4e8557
    <span class="token key atrule">cni.projectcalico.org/podIP</span><span class="token punctuation">:</span> 10.233.105.202/32
    <span class="token key atrule">cni.projectcalico.org/podIPs</span><span class="token punctuation">:</span> 10.233.105.202/32
  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token string">&quot;2025-08-24T07:19:41Z&quot;</span>
  <span class="token key atrule">generateName</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>deployment<span class="token punctuation">-</span>96b9d695<span class="token punctuation">-</span>
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">pod-template-hash</span><span class="token punctuation">:</span> 96b9d695
  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>deployment<span class="token punctuation">-</span>96b9d695<span class="token punctuation">-</span>47trr
  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default
  <span class="token key atrule">ownerReferences</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
    <span class="token key atrule">blockOwnerDeletion</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">controller</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">kind</span><span class="token punctuation">:</span> ReplicaSet
    <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>deployment<span class="token punctuation">-</span>96b9d695
    <span class="token key atrule">uid</span><span class="token punctuation">:</span> 6e3229bc<span class="token punctuation">-</span>9e7e<span class="token punctuation">-</span>4eb9<span class="token punctuation">-</span>b076<span class="token punctuation">-</span>c63da03a21c5
  <span class="token key atrule">resourceVersion</span><span class="token punctuation">:</span> <span class="token string">&quot;681679&quot;</span>
  <span class="token key atrule">uid</span><span class="token punctuation">:</span> e40104ca<span class="token punctuation">-</span>0f72<span class="token punctuation">-</span>4dfa<span class="token punctuation">-</span>9a17<span class="token punctuation">-</span>45971d047d16
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">containers</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>latest
    <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> Always
    <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>
      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP
    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token key atrule">terminationMessagePath</span><span class="token punctuation">:</span> /dev/termination<span class="token punctuation">-</span>log
    <span class="token key atrule">terminationMessagePolicy</span><span class="token punctuation">:</span> File
    <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount
      <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>api<span class="token punctuation">-</span>access<span class="token punctuation">-</span>hqrfr
      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">dnsPolicy</span><span class="token punctuation">:</span> ClusterFirst
  <span class="token key atrule">enableServiceLinks</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">nodeName</span><span class="token punctuation">:</span> tk13
  <span class="token key atrule">preemptionPolicy</span><span class="token punctuation">:</span> PreemptLowerPriority
  <span class="token key atrule">priority</span><span class="token punctuation">:</span> <span class="token number">0</span>
  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Always
  <span class="token key atrule">schedulerName</span><span class="token punctuation">:</span> default<span class="token punctuation">-</span>scheduler
  <span class="token key atrule">securityContext</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token key atrule">serviceAccount</span><span class="token punctuation">:</span> default
  <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> default
  <span class="token key atrule">terminationGracePeriodSeconds</span><span class="token punctuation">:</span> <span class="token number">30</span>
  <span class="token key atrule">tolerations</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">effect</span><span class="token punctuation">:</span> NoExecute
    <span class="token key atrule">key</span><span class="token punctuation">:</span> node.kubernetes.io/not<span class="token punctuation">-</span>ready
    <span class="token key atrule">operator</span><span class="token punctuation">:</span> Exists
    <span class="token key atrule">tolerationSeconds</span><span class="token punctuation">:</span> <span class="token number">300</span>
  <span class="token punctuation">-</span> <span class="token key atrule">effect</span><span class="token punctuation">:</span> NoExecute
    <span class="token key atrule">key</span><span class="token punctuation">:</span> node.kubernetes.io/unreachable
    <span class="token key atrule">operator</span><span class="token punctuation">:</span> Exists
    <span class="token key atrule">tolerationSeconds</span><span class="token punctuation">:</span> <span class="token number">300</span>
  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>api<span class="token punctuation">-</span>access<span class="token punctuation">-</span>hqrfr
    <span class="token key atrule">projected</span><span class="token punctuation">:</span>
      <span class="token key atrule">defaultMode</span><span class="token punctuation">:</span> <span class="token number">420</span>
      <span class="token key atrule">sources</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">serviceAccountToken</span><span class="token punctuation">:</span>
          <span class="token key atrule">expirationSeconds</span><span class="token punctuation">:</span> <span class="token number">3607</span>
          <span class="token key atrule">path</span><span class="token punctuation">:</span> token
      <span class="token punctuation">-</span> <span class="token key atrule">configMap</span><span class="token punctuation">:</span>
          <span class="token key atrule">items</span><span class="token punctuation">:</span>
          <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> ca.crt
            <span class="token key atrule">path</span><span class="token punctuation">:</span> ca.crt
          <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>root<span class="token punctuation">-</span>ca.crt
      <span class="token punctuation">-</span> <span class="token key atrule">downwardAPI</span><span class="token punctuation">:</span>
          <span class="token key atrule">items</span><span class="token punctuation">:</span>
          <span class="token punctuation">-</span> <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>
              <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
              <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.namespace
            <span class="token key atrule">path</span><span class="token punctuation">:</span> namespace
<span class="token key atrule">status</span><span class="token punctuation">:</span>
  <span class="token key atrule">conditions</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">lastProbeTime</span><span class="token punctuation">:</span> <span class="token null important">null</span>
    <span class="token key atrule">lastTransitionTime</span><span class="token punctuation">:</span> <span class="token string">&quot;2025-08-24T07:19:53Z&quot;</span>
    <span class="token key atrule">status</span><span class="token punctuation">:</span> <span class="token string">&quot;True&quot;</span>
    <span class="token key atrule">type</span><span class="token punctuation">:</span> PodReadyToStartContainers
  <span class="token punctuation">-</span> <span class="token key atrule">lastProbeTime</span><span class="token punctuation">:</span> <span class="token null important">null</span>
    <span class="token key atrule">lastTransitionTime</span><span class="token punctuation">:</span> <span class="token string">&quot;2025-08-24T07:19:42Z&quot;</span>
    <span class="token key atrule">status</span><span class="token punctuation">:</span> <span class="token string">&quot;True&quot;</span>
    <span class="token key atrule">type</span><span class="token punctuation">:</span> Initialized
  <span class="token punctuation">-</span> <span class="token key atrule">lastProbeTime</span><span class="token punctuation">:</span> <span class="token null important">null</span>
    <span class="token key atrule">lastTransitionTime</span><span class="token punctuation">:</span> <span class="token string">&quot;2025-08-24T07:19:53Z&quot;</span>
    <span class="token key atrule">status</span><span class="token punctuation">:</span> <span class="token string">&quot;True&quot;</span>
    <span class="token key atrule">type</span><span class="token punctuation">:</span> Ready
  <span class="token punctuation">-</span> <span class="token key atrule">lastProbeTime</span><span class="token punctuation">:</span> <span class="token null important">null</span>
    <span class="token key atrule">lastTransitionTime</span><span class="token punctuation">:</span> <span class="token string">&quot;2025-08-24T07:19:53Z&quot;</span>
    <span class="token key atrule">status</span><span class="token punctuation">:</span> <span class="token string">&quot;True&quot;</span>
    <span class="token key atrule">type</span><span class="token punctuation">:</span> ContainersReady
  <span class="token punctuation">-</span> <span class="token key atrule">lastProbeTime</span><span class="token punctuation">:</span> <span class="token null important">null</span>
    <span class="token key atrule">lastTransitionTime</span><span class="token punctuation">:</span> <span class="token string">&quot;2025-08-24T07:19:41Z&quot;</span>
    <span class="token key atrule">status</span><span class="token punctuation">:</span> <span class="token string">&quot;True&quot;</span>
    <span class="token key atrule">type</span><span class="token punctuation">:</span> PodScheduled
  <span class="token key atrule">containerStatuses</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">containerID</span><span class="token punctuation">:</span> containerd<span class="token punctuation">:</span>//92c96cebbfd61d8b164c5ffff068d2ce9749b1ade488006a2fdfc4f966b8cfca
    <span class="token key atrule">image</span><span class="token punctuation">:</span> docker.io/library/nginx<span class="token punctuation">:</span>latest
    <span class="token key atrule">imageID</span><span class="token punctuation">:</span> docker.io/library/nginx@sha256<span class="token punctuation">:</span>33e0bbc7ca9ecf108140af6288c7c9d1ecc77548cbfd3952fd8466a75edefe57
    <span class="token key atrule">lastState</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">ready</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">restartCount</span><span class="token punctuation">:</span> <span class="token number">0</span>
    <span class="token key atrule">started</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">state</span><span class="token punctuation">:</span>
      <span class="token key atrule">running</span><span class="token punctuation">:</span>
        <span class="token key atrule">startedAt</span><span class="token punctuation">:</span> <span class="token string">&quot;2025-08-24T07:19:53Z&quot;</span>
    <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount
      <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>api<span class="token punctuation">-</span>access<span class="token punctuation">-</span>hqrfr
      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">recursiveReadOnly</span><span class="token punctuation">:</span> Disabled
  <span class="token key atrule">hostIP</span><span class="token punctuation">:</span> 172.19.0.13
  <span class="token key atrule">hostIPs</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">ip</span><span class="token punctuation">:</span> 172.19.0.13
  <span class="token key atrule">phase</span><span class="token punctuation">:</span> Running
  <span class="token key atrule">podIP</span><span class="token punctuation">:</span> 10.233.105.202
  <span class="token key atrule">podIPs</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">ip</span><span class="token punctuation">:</span> 10.233.105.202
  <span class="token key atrule">qosClass</span><span class="token punctuation">:</span> BestEffort
  <span class="token key atrule">startTime</span><span class="token punctuation">:</span> <span class="token string">&quot;2025-08-24T07:19:42Z&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基于上述整体架构的介绍，可以看到对 Kubernetes 本身的学习大致可以归为两方面：</p><ul><li><p><strong>Kubernetes 自身的学习</strong>：整体的运行，各个组件的实现原理等。比如 etcd 的工作原理，容器运行时的实现原理、网络插件的实现原理等。</p></li><li><p><strong>Kubernetes 的使用</strong>：如果基于 Kubernetes 运行我们的应用，主要是学习各种资源对象的使用，如何编写 yaml 文件，如何使用 kubectl 命令等。</p></li></ul>`,11))])}const x=l(c,[["render",g],["__file","architecture.html.vue"]]);export{x as default};
