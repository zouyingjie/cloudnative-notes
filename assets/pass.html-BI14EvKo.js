import{_ as e,c as a,o as t,a as l}from"./app-C-eiXR-Q.js";const r={};function s(i,p){return t(),a("div",null,[...p[0]||(p[0]=[l('<h1 id="云原生平台的构建" tabindex="-1"><a class="header-anchor" href="#云原生平台的构建" aria-hidden="true">#</a> 云原生平台的构建</h1><p><img src="" alt=""></p><p>Cloud-Native，云原生，顾名思义，就是生来就运行在云上的应用。那么在微服务架构下，为了让应用能够平稳的运行起来，我们需要做哪些工作呢？</p><p>让我们先忘掉</p><p>基础资源：</p><ul><li>计算、存储、网络等基础资源的提供和管理</li><li>中间件：数据库、消息队列、缓存等中间件的部署和管理</li></ul><p>有了基础资源之后，在部署前后我们需要做哪些工作呢？</p><p>首先在微服务架构下，服务之前是存在依赖的，如果某个 A 服务依赖 B 服务，那么在部署 A 服务之前，我们需要先确保 B 服务已经部署好了，因此我们需要梳理出这些服务的依赖关系，保证被依赖的服务先部署好。</p><p>其次在部署完成后，我们需要因此我们需要服务注册</p><p>在运行起来后，问题</p><p>现在服务已经跑起来了，下一步就是对外提供服务了。为此我们需要将。</p><p>在分布式架构下，出错是必然的，因此</p><p>有一个好的云原生平台，能够具有以下呢能力：</p>',13)])])}const n=e(r,[["render",s],["__file","pass.html.vue"]]);export{n as default};
