import{_ as i,r as s,c as d,o as a,a as o,b as r,d as n,e as l}from"./app-C-eiXR-Q.js";const p={},u={href:"https://github.com/cncf/curriculum/blob/master/CKA_Curriculum_v1.19.pdf",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/cncf/curriculum/blob/master/CKS_Curriculum_%20v1.19%20Coming%20Soon%20November%202020.pdf",target:"_blank",rel:"noopener noreferrer"},b={href:"https://kubernetes.io/docs/tasks/tools/install-kubectl/#enabling-shell-autocompletion",target:"_blank",rel:"noopener noreferrer"},f={href:"https://kubernetes.io/docs/reference/access-authn-authz/rbac/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/mmumshad/kubernetes-the-hard-way/blob/master/practice-questions-answers/cluster-maintenance/backup-etcd/etcd-backup-and-restore.md",target:"_blank",rel:"noopener noreferrer"},h={href:"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#scaling-a-deployment",target:"_blank",rel:"noopener noreferrer"},c={href:"https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://kubernetes.io/docs/concepts/services-networking/service/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://kubernetes.io/docs/concepts/services-networking/ingress/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://kubernetes.io/docs/concepts/services-networking/network-policies/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/",target:"_blank",rel:"noopener noreferrer"},K={href:"https://kubernetes.io/docs/concepts/storage/persistent-volumes/",target:"_blank",rel:"noopener noreferrer"},P={href:"https://kubernetes.io/docs/concepts/cluster-administration/logging/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://www.udemy.com/course/certified-kubernetes-administrator-with-practice-tests/",target:"_blank",rel:"noopener noreferrer"},S={href:"https://book.douban.com/subject/26997846/",target:"_blank",rel:"noopener noreferrer"},V={href:"https://www.redhat.com/cms/managed-files/cm-oreilly-kubernetes-patterns-ebook-f19824-201910-en.pdf",target:"_blank",rel:"noopener noreferrer"},D={href:"https://learning.oreilly.com/library/view/kubernetes-best-practices/9781492056461/ch01.html",target:"_blank",rel:"noopener noreferrer"},U={href:"https://kubernetes.io/docs",target:"_blank",rel:"noopener noreferrer"};function B(E,e){const t=s("ExternalLinkIcon");return a(),d("div",null,[e[47]||(e[47]=o('<h1 id="cka-ckad-认证考试经验总结" tabindex="-1"><a class="header-anchor" href="#cka-ckad-认证考试经验总结" aria-hidden="true">#</a> CKA/CKAD 认证考试经验总结</h1><p><img src="https://i-blog.csdnimg.cn/blog_migrate/0226075527d484ca114d7278731136a2.png#pic_center" alt="在这里插入图片描述"></p><p>CKA 和 CKAD 是 CNCF 官方认证的 Kubernetes 管理员和开发者认证。CKA 考察对 Kubernetes 集群的能力，而 CKAD 则需要具备开发 Kubernetes 应用的能力。就整体难度不大，把 CKA 和 CKAD 考过之后，就算是对 Kubernetes 入门了。</p><p>之前把 CKA/CKAD 认证考过了，简单总结下考试经验，希望对需要的同学有所帮助。</p><h3 id="一-报名-预约" tabindex="-1"><a class="header-anchor" href="#一-报名-预约" aria-hidden="true">#</a> 一. 报名 &amp; 预约</h3><h4 id="_1-报名" tabindex="-1"><a class="header-anchor" href="#_1-报名" aria-hidden="true">#</a> 1. 报名</h4><p>报名地址为 <code>https://www.cncf.io/certification/cka/</code>， 可以选择中文或者英文报名，我选的英文。 <img src="https://i-blog.csdnimg.cn/blog_migrate/26183bc891e6e558c4786dee5a1c7095.png#pic_center" alt="在这里插入图片描述"> 英文报名有几个优惠码：<code>KUBERNETES15</code>、<code>DEVOPS15</code>，可以打 85 折，亲测可用。</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/3aae5b3df7d4a22809baa3cf45e5933f.png#pic_center" alt="在这里插入图片描述"> 进入付费界面付费完成即可。</p><h4 id="_2-预约" tabindex="-1"><a class="header-anchor" href="#_2-预约" aria-hidden="true">#</a> 2. 预约</h4><p>付费完成后会收到邮件，进入 <img src="https://i-blog.csdnimg.cn/blog_migrate/d6848262326d09fe4042870b2c8dc12e.png#pic_center" alt="在这里插入图片描述"></p><p>点击 「View Your Portal」或者直接访问 <code>https://trainingportal.linuxfoundation.org/learn/dashboard</code> 就可以看到考试项目了。</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/9223d48d24d85e1f25755059b2746d52.png#pic_center" alt="在这里插入图片描述"></p><p>点击右边按钮进入预约界面，会有一系列的 checklist 包括安装插件，同意协议等操作，都完成后过个几分钟「预约按钮」才会可用，点击后预约即可，这里需要注意预约的默认时区是 UTC，先改为选择北京时间之后在进行预约。</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/0b008c2b0ee60711ff73db074f70248f.png#pic_center" alt="在这里插入图片描述"></p><p>预约完成后会收到邮件，后面就是坐等考试了。</p><h3 id="二-考试简介-备考建议" tabindex="-1"><a class="header-anchor" href="#二-考试简介-备考建议" aria-hidden="true">#</a> 二. 考试简介 &amp; 备考建议</h3><h4 id="_1-考纲介绍" tabindex="-1"><a class="header-anchor" href="#_1-考纲介绍" aria-hidden="true">#</a> 1. 考纲介绍</h4><p>CKA 考试主要包括下面几项内容：</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/c6a31af0b22b377e38471f300834da3c.png#pic_center" alt="在这里插入图片描述"></p>',19)),r("p",null,[e[1]||(e[1]=n("详细考纲考纲参见 ",-1)),r("a",u,[e[0]||(e[0]=n("CKA_Curriculum",-1)),l(t)]),e[2]||(e[2]=n("。",-1))]),r("ul",null,[r("li",null,[e[4]||(e[4]=n("注：2020 年 9 月 1 号之后，考试集群版本变为 1.19，并且减少了安全相关的内容，将其移到了即将上线的 ",-1)),r("a",g,[e[3]||(e[3]=n("CKS",-1)),l(t)]),e[5]||(e[5]=n(" 考试中，但依然会考察 RBAC 相关的内容。",-1))])]),e[48]||(e[48]=o('<h4 id="_2-考官检查事项" tabindex="-1"><a class="header-anchor" href="#_2-考官检查事项" aria-hidden="true">#</a> 2. 考官检查事项</h4><p>考试开始前 15 分钟会有远程考官来做一系列的检查，如果是早上考试建议预留出时间来，避免考试开始太晚可能遇到网络问题或者被人打扰。</p><p>检查主要包括下面几项：</p><h5 id="_1-开启摄像头-电脑桌面分享" tabindex="-1"><a class="header-anchor" href="#_1-开启摄像头-电脑桌面分享" aria-hidden="true">#</a> 1. 开启摄像头 &amp; 电脑桌面分享</h5><p>首先考官会要求你开启摄像头，关闭无关进程并共享电脑桌面，如果有外接显示器也需要一并分享。</p><h5 id="_2-检查办公桌面-房间环境" tabindex="-1"><a class="header-anchor" href="#_2-检查办公桌面-房间环境" aria-hidden="true">#</a> 2. 检查办公桌面 &amp; 房间环境</h5><p>摄像头开启后，考官会指导我们做一系列的操作，比如检查电脑进程、检查浏览器 tab、检查房间环境和办公桌面、桌底，跟着做就好了，要注意一下几点:</p><ul><li>考试中途不能有其他人，因此尽量选择不被打扰的时间进行考试。</li><li>桌面不能有任何无关的东西，比如书、水杯等。</li><li>考试过程中必须始终开启摄像头和桌面分享，摄像头需要一直能看到全脸，不能喝水、捂嘴。</li></ul><h4 id="_3-考试界面简介" tabindex="-1"><a class="header-anchor" href="#_3-考试界面简介" aria-hidden="true">#</a> 3.考试界面简介</h4><p>考完检查完成后就可以进入考试界面了。考试界面如下：</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/3324f1528b1f59be766b0e477331d0b8.png#pic_center" alt="图片来源"></p><ul><li>图片来源：https://blog.csdn.net/fly910905/article/details/102966474</li></ul><p>左边有时间条、语言选择和题目说明。题目语言可以选择英文、中文和日语，中文翻译可能略微不通顺，可以中英文对照着看。</p><p>右上角其他工具中有 notepad，可以用来保存一些命令等。</p><h4 id="_4-考试建议" tabindex="-1"><a class="header-anchor" href="#_4-考试建议" aria-hidden="true">#</a> 4. 考试建议</h4><p>就我考完的感觉，CKA 题目难度不大，但考试面比较广， 会综合考察集群应用的生命周期管理，调度，网络，存储，集群运维，集群排错等内容。</p><p>考试时长 2 小时，有 15 ~ 20 道题目。我考的时候是 17 道。每道题目会给出需要的环境、题目要求以及所占权重，权重加起来共 100分，超过 66 分就算过。自己可以根据权重和知识点熟悉程度灵活选择做题顺序。</p><p>下面是一些考试建议：</p><h5 id="【1】准备好-vpn" tabindex="-1"><a class="header-anchor" href="#【1】准备好-vpn" aria-hidden="true">#</a> 【1】准备好 VPN</h5><p>毕竟国外的考试，网络问题还是需要考虑的，建议选择早上或者深夜考试，并准备好 VPN。我是早上六点考的试，用上喂批恩敲命令行基本没有迟钝感。</p><h5 id="【2】快速浏览题目" tabindex="-1"><a class="header-anchor" href="#【2】快速浏览题目" aria-hidden="true">#</a> 【2】快速浏览题目</h5><p>建议先把所有的题目浏览一遍，做到有的放矢。有的题目比如修改 deployment 的 replica 数只要一条命令几十秒就可以搞定，而集群升级则需要等待相关软件安装、集群组件升级完成才行，因此可以根据考试时间灵活调整做题顺序。</p><h5 id="【3】注意题目要求的上下文" tabindex="-1"><a class="header-anchor" href="#【3】注意题目要求的上下文" aria-hidden="true">#</a> 【3】注意题目要求的上下文</h5><p>考试会给若干的集群，我考试时有 7 个，不同的题目会要求在不同的集群下完成，</p><p>每道题目开头都会给出对应的集群名和切换命令，因此在做提前一定要执行一遍以保证做题环境是正确的。</p><h5 id="【4】启用-kubectl-自动提示" tabindex="-1"><a class="header-anchor" href="#【4】启用-kubectl-自动提示" aria-hidden="true">#</a> 【4】启用 kubectl 自动提示</h5>',26)),r("p",null,[e[7]||(e[7]=n("网上很多资料说考试环境已经配置了自动提示，但我考试时是没有的，需要自己设置： 文档地址为 ",-1)),r("a",b,[e[6]||(e[6]=n("enabling-shell-autocompletio",-1)),l(t)]),e[8]||(e[8]=n("，可以提前收藏好考试时直接打开复制即可。",-1))]),e[49]||(e[49]=r("h5",{id:"【5】提前整理好文档收藏",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#【5】提前整理好文档收藏","aria-hidden":"true"},"#"),n(" 【5】提前整理好文档收藏")],-1)),e[50]||(e[50]=r("p",null,"对于一些简单操作，比如升级 Deployment 的镜像，水平扩展等尽量用命令完成。如果是需要编写 yaml 文件的题目，比如创建 Ingress、Network Policy、PV/PC，RABC 等，手敲太慢了，可以先从官方文档拷贝下来修改，为了节省时间，可将对应的文档地址组织到收藏夹中，用到的时候直接打开就行了。",-1)),e[51]||(e[51]=r("h3",{id:"三-考试题目简记",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#三-考试题目简记","aria-hidden":"true"},"#"),n(" 三. 考试题目简记")],-1)),e[52]||(e[52]=r("p",null,"下面是是我考完后简单整理的题目，大家可以作为参考。",-1)),e[53]||(e[53]=r("p",null,[r("strong",null,"1 . 创建 ServiceAccount 并赋予创建 Deployment 的权限。")],-1)),r("ul",null,[r("li",null,[e[10]||(e[10]=n("参考文档：",-1)),r("a",f,[e[9]||(e[9]=n("Using RBAC Authorization",-1)),l(t)])]),r("li",null,[e[12]||(e[12]=n("参考文档：",-1)),r("a",m,[e[11]||(e[11]=n("Certificate Signing Requests ",-1)),l(t)]),e[13]||(e[13]=n(", CSR 可能不考",-1))])]),e[54]||(e[54]=r("p",null,[r("strong",null,"2 . etcd 数据的备份与恢复")],-1)),r("ul",null,[r("li",null,[e[15]||(e[15]=n("参考文档: ",-1)),r("a",k,[e[14]||(e[14]=n("kubernetes-the-hard-way",-1)),l(t)])])]),e[55]||(e[55]=r("p",null,[r("strong",null,"3 . Deployment 的的水平扩展")],-1)),r("ul",null,[r("li",null,[e[17]||(e[17]=n("参考文档",-1)),r("a",h,[e[16]||(e[16]=n("Scaling a Deployment",-1)),l(t)])])]),e[56]||(e[56]=r("p",null,[r("strong",null,"4 . 基于 nodeSelector 调度 Pod")],-1)),r("ul",null,[r("li",null,[e[19]||(e[19]=n("参考文档：",-1)),r("a",c,[e[18]||(e[18]=n("Assigning Pods to Nodes",-1)),l(t)])])]),e[57]||(e[57]=o(`<p><strong>5.查看 log 日志</strong></p><p>题目很简单，一般是查看某个 Pod 的指定内容的日志然后输出到某个文件中：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubectl logs -f PodNmae [containerName]| grep &quot;&quot; &gt; file
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>6. 查看 Pod 的 CPU 使用</strong></p><p>一般已经安装好了 metric server，直接用 <code>kubectl top</code> 命令查看即可。</p><p><strong>7 . 根据要求创建一个多容器 Pod</strong></p><p><strong>8. 为 Pod 创建 NodeType 类型的 Service</strong></p>`,7)),r("ul",null,[r("li",null,[e[21]||(e[21]=n("参考文档：",-1)),r("a",C,[e[20]||(e[20]=n("Service",-1)),l(t)])])]),e[58]||(e[58]=r("p",null,[r("strong",null,"9. 根据指定的的路径和 Service 创建 Ingress")],-1)),r("ul",null,[r("li",null,[e[23]||(e[23]=n("参考文档：",-1)),r("a",v,[e[22]||(e[22]=n("Ingress",-1)),l(t)])])]),e[59]||(e[59]=r("p",null,[r("strong",null,"10 . 根据指定规则创建 NetworkPolicy")],-1)),r("ul",null,[r("li",null,[e[25]||(e[25]=n("参考文档:",-1)),r("a",w,[e[24]||(e[24]=n("NetworkPolicy",-1)),l(t)])])]),e[60]||(e[60]=r("p",null,[r("strong",null,"11. 根据指定条件创建 PV、PVC 并挂载到 Pod，之后修改 PVC 的容量")],-1)),r("ul",null,[r("li",null,[e[27]||(e[27]=n("参考文档：",-1)),r("a",x,[e[26]||(e[26]=n("Configure a Pod to Use a PersistentVolume for Storage",-1)),l(t)])]),r("li",null,[e[29]||(e[29]=n("参考文档：",-1)),r("a",K,[e[28]||(e[28]=n("Persistent Volumes",-1)),l(t)])])]),e[61]||(e[61]=r("p",null,[r("strong",null,"12 . 给已有的 Pod 添加 sidecar 容器来收集日志")],-1)),r("ul",null,[r("li",null,[e[31]||(e[31]=n("参考文档：",-1)),r("a",P,[e[30]||(e[30]=n("sing a sidecar container with the logging agent ",-1)),l(t)])])]),e[62]||(e[62]=r("p",null,[r("strong",null,"13. 升级主节点")],-1)),e[63]||(e[63]=r("p",null,"集群升级目测是必考题，需要看清楚是升级主节点还是 worker 节点，步骤一般都是：",-1)),r("ul",null,[e[34]||(e[34]=o("<li><p>查看升级信息:<code>kubeadm upgrade plan </code></p></li><li><p>驱逐对应节点 <code>kubectl drain nodeName</code></p></li><li><p>升级 kubeadm <code>apt-get install kubeadm=1.19.0-00</code></p></li><li><p>执行集群升级</p><ul><li>升级主节点 <code>kubeadm upgrade apply v1.19.3</code></li><li>升级 worker 节点：<code>kubeadm upgrade node</code></li></ul></li><li><p>升级 kubelet: <code>apt-get install kubeamd=1.19.0-00</code></p></li><li><p>完成后重新启用节点 <code>kubectl uncordon nodeName</code></p></li>",6)),r("li",null,[r("p",null,[e[33]||(e[33]=n("参考文档：",-1)),r("a",y,[e[32]||(e[32]=n("Upgrading kubeadm clusters",-1)),l(t)])])])]),e[64]||(e[64]=r("p",null,[r("strong",null,"14. 驱逐某个节点并重新调度")],-1)),e[65]||(e[65]=r("p",null,[r("strong",null,"15 . 一道 taint 相关的题目，具体细节忘了")],-1)),r("ul",null,[r("li",null,[e[36]||(e[36]=n("参考文档：",-1)),r("a",A,[e[35]||(e[35]=n("Taints and Tolerations",-1)),l(t)])])]),e[66]||(e[66]=o('<p><strong>16. 集群排错，某个 worker 节点处于 NotReady，找出原因并恢复</strong></p><p>这是我考试时候的最后一道题目，权重 13%，但题目不难，原因是 worker 节点的 kubelet 没有启动，ssh 登陆到 worker 节点使用 <code>systemctl</code> 启动就好了。</p><p>下面是一些 tip:</p><ul><li>节点问题： <ul><li>api-server、etcd、scheduler、controller 是否启动成功，检查 <code>/etc/kubernetes/manifests/</code> 下的 yaml 文件是否有问题。</li><li>检查网络插件是否安装</li><li>检查 kube-proxy 是否配置正确</li><li>检查 DNS 是否配置正确</li><li>检查 kubelet 是否正常启动</li></ul></li><li>应用问题： <ul><li>应用镜像是否正确</li><li>应用配置的 Service、Ingress 等是否正确</li><li>CPU、内存等配置是否</li></ul></li></ul><h3 id="四-备考资料推荐" tabindex="-1"><a class="header-anchor" href="#四-备考资料推荐" aria-hidden="true">#</a> 四. 备考资料推荐</h3>',5)),r("p",null,[e[38]||(e[38]=n("如果是为了考试的话，墙裂推荐 Udemy 的课程 ",-1)),r("a",N,[e[37]||(e[37]=n("Certified Kubernetes Administrator (CKA) with Practice Tests",-1)),l(t)]),e[39]||(e[39]=n("，这算是针对 CKA 认证量身定制的课程，并且附带了大量的习题，照着课程知识点过一遍做完这些习题考试基本没啥问题。这里需要注意习题练习需要威批恩，要提前准备好。",-1))]),e[67]||(e[67]=r("p",null,"但就我个人感觉 CKA 考试难度有限，不建议为了考试而考试，重要的还是趁考试的机会系统深入的学习 K8S，下面是我最近集中学习 K8S 的一些材料，大家可以作为学习参考：",-1)),r("ul",null,[r("li",null,[r("a",S,[e[40]||(e[40]=n("《Kubernetes In Action》",-1)),l(t)])]),r("li",null,[r("a",V,[e[41]||(e[41]=n("《Kubernetes Patterns》",-1)),l(t)])]),e[43]||(e[43]=r("li",null,"极客时间专栏《深入剖析 Kubernetes》",-1)),r("li",null,[r("a",D,[e[42]||(e[42]=n("《kubernetes-best-practices》",-1)),l(t)])])]),r("p",null,[e[45]||(e[45]=n("当然还有最重要的 ",-1)),r("a",U,[e[44]||(e[44]=n("官方文档",-1)),l(t)]),e[46]||(e[46]=n("。",-1))])])}const R=i(p,[["render",B],["__file","cka.html.vue"]]);export{R as default};
